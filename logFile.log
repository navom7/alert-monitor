2024-02-04 02:10:45 [main] INFO  c.a.AlertMonitorApplication - Starting AlertMonitorApplication using Java 17.0.7 with PID 1146 (/Users/nanhe/Desktop/alert-monitor/build/classes/java/main started by nanhe in /Users/nanhe/Desktop/alert-monitor)
2024-02-04 02:10:45 [main] INFO  c.a.AlertMonitorApplication - The following 1 profile is active: "dev"
2024-02-04 02:10:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-02-04 02:10:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-02-04 02:10:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2024-02-04 02:10:46 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8090 (http)
2024-02-04 02:10:46 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"]
2024-02-04 02:10:46 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-02-04 02:10:46 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2024-02-04 02:10:46 [main] INFO  o.a.c.c.C.[.[.[/alertmonitor] - Initializing Spring embedded WebApplicationContext
2024-02-04 02:10:46 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 884 ms
2024-02-04 02:10:48 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2024-02-04 02:10:48 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-02-04 02:10:48 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:10:48 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:10:48 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706992848739
2024-02-04 02:10:50 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2024-02-04 02:10:50 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-02-04 02:10:50 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-02-04 02:10:50 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-02-04 02:10:50 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"]
2024-02-04 02:10:50 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8090 (http) with context path '/alertmonitor'
2024-02-04 02:10:50 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:10:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:10:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:10:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706992850585
2024-02-04 02:10:50 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:10:50 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:10:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:10:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:10:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706992850605
2024-02-04 02:10:50 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:10:50 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:10:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:10:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:10:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706992850617
2024-02-04 02:10:50 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:10:50 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:10:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:10:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:10:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706992850631
2024-02-04 02:10:50 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:10:50 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-5
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:10:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:10:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:10:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706992850645
2024-02-04 02:10:50 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:10:50 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-6
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:10:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:10:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:10:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706992850656
2024-02-04 02:10:50 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:10:50 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-7
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:10:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:10:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:10:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706992850668
2024-02-04 02:10:50 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:10:50 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-8
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:10:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:10:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:10:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706992850683
2024-02-04 02:10:50 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:10:50 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-9
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:10:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:10:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:10:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706992850697
2024-02-04 02:10:50 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:10:50 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-10
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:10:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:10:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:10:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706992850729
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-3-00b4b425-14a7-4160-b612-14e3d4531918
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-2-a41e18a5-03db-421f-a49e-e945196ff03d
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:10:50 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-1-cf6d9405-2e6d-4a9d-9416-2be7a1195cd1
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-6-ce95e0dd-9093-4bb4-adc7-99439f898f28
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-7-3e52f5e3-dbc1-4f1e-bc11-9a52ce5159c9
2024-02-04 02:10:50 [main] INFO  c.a.AlertMonitorApplication - Started AlertMonitorApplication in 5.354 seconds (process running for 5.955)
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-4-2fd9b9f2-7e1e-4a4d-b852-2693773b8421
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=1, memberId='consumer-client-event-partitioned-group-id-2-a41e18a5-03db-421f-a49e-e945196ff03d', protocol='range'}
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-8-d0d683cf-a99d-42e2-9e85-0b9251b7a117
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-5-ab5ba65c-b063-4026-9df6-dff52a66af39
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=1, memberId='consumer-client-event-partitioned-group-id-6-ce95e0dd-9093-4bb4-adc7-99439f898f28', protocol='range'}
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-9-93778f96-a2be-40bc-ab70-e46f78b54adc
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=1, memberId='consumer-client-event-partitioned-group-id-1-cf6d9405-2e6d-4a9d-9416-2be7a1195cd1', protocol='range'}
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=1, memberId='consumer-client-event-partitioned-group-id-3-00b4b425-14a7-4160-b612-14e3d4531918', protocol='range'}
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=1, memberId='consumer-client-event-partitioned-group-id-3-00b4b425-14a7-4160-b612-14e3d4531918', protocol='range'}
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=1, memberId='consumer-client-event-partitioned-group-id-2-a41e18a5-03db-421f-a49e-e945196ff03d', protocol='range'}
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=1, memberId='consumer-client-event-partitioned-group-id-6-ce95e0dd-9093-4bb4-adc7-99439f898f28', protocol='range'}
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-10-4ac4c33a-7228-49d4-8333-3fad21076db3
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Finished assignment for group at generation 1: {consumer-client-event-partitioned-group-id-2-a41e18a5-03db-421f-a49e-e945196ff03d=Assignment(partitions=[client-event-partitioned-topic-3, client-event-partitioned-topic-4, client-event-partitioned-topic-5]), consumer-client-event-partitioned-group-id-1-cf6d9405-2e6d-4a9d-9416-2be7a1195cd1=Assignment(partitions=[client-event-partitioned-topic-0, client-event-partitioned-topic-1, client-event-partitioned-topic-2]), consumer-client-event-partitioned-group-id-3-00b4b425-14a7-4160-b612-14e3d4531918=Assignment(partitions=[client-event-partitioned-topic-6, client-event-partitioned-topic-7]), consumer-client-event-partitioned-group-id-6-ce95e0dd-9093-4bb4-adc7-99439f898f28=Assignment(partitions=[client-event-partitioned-topic-8, client-event-partitioned-topic-9])}
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=1, memberId='consumer-client-event-partitioned-group-id-1-cf6d9405-2e6d-4a9d-9416-2be7a1195cd1', protocol='range'}
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=2, memberId='consumer-client-event-partitioned-group-id-7-3e52f5e3-dbc1-4f1e-bc11-9a52ce5159c9', protocol='range'}
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=2, memberId='consumer-client-event-partitioned-group-id-9-93778f96-a2be-40bc-ab70-e46f78b54adc', protocol='range'}
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=2, memberId='consumer-client-event-partitioned-group-id-2-a41e18a5-03db-421f-a49e-e945196ff03d', protocol='range'}
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=2, memberId='consumer-client-event-partitioned-group-id-3-00b4b425-14a7-4160-b612-14e3d4531918', protocol='range'}
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=2, memberId='consumer-client-event-partitioned-group-id-10-4ac4c33a-7228-49d4-8333-3fad21076db3', protocol='range'}
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=2, memberId='consumer-client-event-partitioned-group-id-4-2fd9b9f2-7e1e-4a4d-b852-2693773b8421', protocol='range'}
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=2, memberId='consumer-client-event-partitioned-group-id-5-ab5ba65c-b063-4026-9df6-dff52a66af39', protocol='range'}
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=2, memberId='consumer-client-event-partitioned-group-id-8-d0d683cf-a99d-42e2-9e85-0b9251b7a117', protocol='range'}
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=2, memberId='consumer-client-event-partitioned-group-id-6-ce95e0dd-9093-4bb4-adc7-99439f898f28', protocol='range'}
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=2, memberId='consumer-client-event-partitioned-group-id-1-cf6d9405-2e6d-4a9d-9416-2be7a1195cd1', protocol='range'}
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Finished assignment for group at generation 2: {consumer-client-event-partitioned-group-id-9-93778f96-a2be-40bc-ab70-e46f78b54adc=Assignment(partitions=[client-event-partitioned-topic-9]), consumer-client-event-partitioned-group-id-2-a41e18a5-03db-421f-a49e-e945196ff03d=Assignment(partitions=[client-event-partitioned-topic-2]), consumer-client-event-partitioned-group-id-7-3e52f5e3-dbc1-4f1e-bc11-9a52ce5159c9=Assignment(partitions=[client-event-partitioned-topic-7]), consumer-client-event-partitioned-group-id-1-cf6d9405-2e6d-4a9d-9416-2be7a1195cd1=Assignment(partitions=[client-event-partitioned-topic-0]), consumer-client-event-partitioned-group-id-3-00b4b425-14a7-4160-b612-14e3d4531918=Assignment(partitions=[client-event-partitioned-topic-3]), consumer-client-event-partitioned-group-id-10-4ac4c33a-7228-49d4-8333-3fad21076db3=Assignment(partitions=[client-event-partitioned-topic-1]), consumer-client-event-partitioned-group-id-4-2fd9b9f2-7e1e-4a4d-b852-2693773b8421=Assignment(partitions=[client-event-partitioned-topic-4]), consumer-client-event-partitioned-group-id-5-ab5ba65c-b063-4026-9df6-dff52a66af39=Assignment(partitions=[client-event-partitioned-topic-5]), consumer-client-event-partitioned-group-id-8-d0d683cf-a99d-42e2-9e85-0b9251b7a117=Assignment(partitions=[client-event-partitioned-topic-8]), consumer-client-event-partitioned-group-id-6-ce95e0dd-9093-4bb4-adc7-99439f898f28=Assignment(partitions=[client-event-partitioned-topic-6])}
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=2, memberId='consumer-client-event-partitioned-group-id-7-3e52f5e3-dbc1-4f1e-bc11-9a52ce5159c9', protocol='range'}
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=2, memberId='consumer-client-event-partitioned-group-id-10-4ac4c33a-7228-49d4-8333-3fad21076db3', protocol='range'}
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=2, memberId='consumer-client-event-partitioned-group-id-9-93778f96-a2be-40bc-ab70-e46f78b54adc', protocol='range'}
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-9])
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-1])
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-7])
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=2, memberId='consumer-client-event-partitioned-group-id-2-a41e18a5-03db-421f-a49e-e945196ff03d', protocol='range'}
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-2])
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=2, memberId='consumer-client-event-partitioned-group-id-4-2fd9b9f2-7e1e-4a4d-b852-2693773b8421', protocol='range'}
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-4])
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=2, memberId='consumer-client-event-partitioned-group-id-8-d0d683cf-a99d-42e2-9e85-0b9251b7a117', protocol='range'}
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=2, memberId='consumer-client-event-partitioned-group-id-3-00b4b425-14a7-4160-b612-14e3d4531918', protocol='range'}
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-8])
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-3])
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=2, memberId='consumer-client-event-partitioned-group-id-5-ab5ba65c-b063-4026-9df6-dff52a66af39', protocol='range'}
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-5])
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=2, memberId='consumer-client-event-partitioned-group-id-6-ce95e0dd-9093-4bb4-adc7-99439f898f28', protocol='range'}
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=2, memberId='consumer-client-event-partitioned-group-id-1-cf6d9405-2e6d-4a9d-9416-2be7a1195cd1', protocol='range'}
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-6])
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-0])
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-6
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-4
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-0
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-2
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-5
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-7
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-3
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-8
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-1
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-9
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Found no committed offset for partition client-event-partitioned-topic-3
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Found no committed offset for partition client-event-partitioned-topic-8
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Found no committed offset for partition client-event-partitioned-topic-4
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Found no committed offset for partition client-event-partitioned-topic-7
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Found no committed offset for partition client-event-partitioned-topic-2
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Found no committed offset for partition client-event-partitioned-topic-6
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Found no committed offset for partition client-event-partitioned-topic-6
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Found no committed offset for partition client-event-partitioned-topic-9
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Found no committed offset for partition client-event-partitioned-topic-3
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Found no committed offset for partition client-event-partitioned-topic-0
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Found no committed offset for partition client-event-partitioned-topic-5
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Found no committed offset for partition client-event-partitioned-topic-2
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Found no committed offset for partition client-event-partitioned-topic-8
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Found no committed offset for partition client-event-partitioned-topic-7
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Found no committed offset for partition client-event-partitioned-topic-0
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Found no committed offset for partition client-event-partitioned-topic-4
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Found no committed offset for partition client-event-partitioned-topic-1
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Found no committed offset for partition client-event-partitioned-topic-9
2024-02-04 02:10:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Found no committed offset for partition client-event-partitioned-topic-5
2024-02-04 02:10:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Found no committed offset for partition client-event-partitioned-topic-1
2024-02-04 02:10:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Resetting offset for partition client-event-partitioned-topic-8 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}.
2024-02-04 02:10:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Resetting offset for partition client-event-partitioned-topic-9 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}.
2024-02-04 02:10:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Resetting offset for partition client-event-partitioned-topic-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}.
2024-02-04 02:10:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Resetting offset for partition client-event-partitioned-topic-4 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}.
2024-02-04 02:10:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Resetting offset for partition client-event-partitioned-topic-6 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}.
2024-02-04 02:10:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Resetting offset for partition client-event-partitioned-topic-5 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}.
2024-02-04 02:10:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Resetting offset for partition client-event-partitioned-topic-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}.
2024-02-04 02:10:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Resetting offset for partition client-event-partitioned-topic-7 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}.
2024-02-04 02:10:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Resetting offset for partition client-event-partitioned-topic-3 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}.
2024-02-04 02:10:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Resetting offset for partition client-event-partitioned-topic-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}.
2024-02-04 02:10:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-1]
2024-02-04 02:10:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-0]
2024-02-04 02:10:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-6]
2024-02-04 02:10:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-8]
2024-02-04 02:10:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-5]
2024-02-04 02:10:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-9]
2024-02-04 02:10:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-2]
2024-02-04 02:10:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-3]
2024-02-04 02:10:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-7]
2024-02-04 02:10:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-4]
2024-02-04 02:11:25 [http-nio-8090-exec-2] INFO  o.a.c.c.C.[.[.[/alertmonitor] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-02-04 02:11:25 [http-nio-8090-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-02-04 02:11:25 [http-nio-8090-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2024-02-04 02:11:25 [http-nio-8090-exec-2] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2024-02-04 02:11:25 [http-nio-8090-exec-2] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2024-02-04 02:11:25 [http-nio-8090-exec-2] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:11:25 [http-nio-8090-exec-2] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:11:25 [http-nio-8090-exec-2] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706992885702
2024-02-04 02:11:25 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:11:25 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 1033 with epoch 0
2024-02-04 02:14:14 [main] INFO  c.a.AlertMonitorApplication - Starting AlertMonitorApplication using Java 17.0.7 with PID 3330 (/Users/nanhe/Desktop/alert-monitor/build/classes/java/main started by nanhe in /Users/nanhe/Desktop/alert-monitor)
2024-02-04 02:14:14 [main] INFO  c.a.AlertMonitorApplication - The following 1 profile is active: "dev"
2024-02-04 02:14:14 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-02-04 02:14:14 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-02-04 02:14:14 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2024-02-04 02:14:15 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8090 (http)
2024-02-04 02:14:15 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"]
2024-02-04 02:14:15 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-02-04 02:14:15 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2024-02-04 02:14:15 [main] INFO  o.a.c.c.C.[.[.[/alertmonitor] - Initializing Spring embedded WebApplicationContext
2024-02-04 02:14:15 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 912 ms
2024-02-04 02:14:17 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2024-02-04 02:14:17 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-02-04 02:14:17 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:14:17 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:14:17 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993057706
2024-02-04 02:14:18 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2024-02-04 02:14:18 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-02-04 02:14:18 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-02-04 02:14:18 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-02-04 02:14:18 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"]
2024-02-04 02:14:18 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8090 (http) with context path '/alertmonitor'
2024-02-04 02:14:18 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:14:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:14:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:14:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993058179
2024-02-04 02:14:18 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:14:18 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:14:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:14:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:14:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993058211
2024-02-04 02:14:18 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:14:18 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:14:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:14:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:14:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993058226
2024-02-04 02:14:18 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:14:18 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:14:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:14:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:14:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993058252
2024-02-04 02:14:18 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:14:18 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-5
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:14:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:14:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:14:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993058288
2024-02-04 02:14:18 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:14:18 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-6
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:14:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:14:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:14:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993058296
2024-02-04 02:14:18 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:14:18 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-7
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:14:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:14:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:14:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993058302
2024-02-04 02:14:18 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:14:18 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-8
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:14:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:14:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:14:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993058316
2024-02-04 02:14:18 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:14:18 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-9
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:14:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:14:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:14:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993058335
2024-02-04 02:14:18 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:14:18 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-10
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:14:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:14:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:14:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993058364
2024-02-04 02:14:18 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-1-9921a30f-da77-4521-85c6-18045a3e24f6
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-3-0bc06794-fc1e-42ec-a52e-a12c4be1bf3a
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-4-7ed0e25e-530d-4bc2-87bf-5b91cc595c22
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-2-a785f714-73fe-43b6-a5a7-8fc3a0e5b183
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:14:18 [main] INFO  c.a.AlertMonitorApplication - Started AlertMonitorApplication in 4.389 seconds (process running for 5.118)
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-10-b3b76713-2e15-480e-a7fd-814a0a012bd8
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-5-22fa2dce-18e1-4c97-bdd1-2ba3f62160b8
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-8-9cb20152-6f1b-4304-bbc1-800700d82244
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=4, memberId='consumer-client-event-partitioned-group-id-1-9921a30f-da77-4521-85c6-18045a3e24f6', protocol='range'}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=4, memberId='consumer-client-event-partitioned-group-id-3-0bc06794-fc1e-42ec-a52e-a12c4be1bf3a', protocol='range'}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=4, memberId='consumer-client-event-partitioned-group-id-10-b3b76713-2e15-480e-a7fd-814a0a012bd8', protocol='range'}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=4, memberId='consumer-client-event-partitioned-group-id-2-a785f714-73fe-43b6-a5a7-8fc3a0e5b183', protocol='range'}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=4, memberId='consumer-client-event-partitioned-group-id-4-7ed0e25e-530d-4bc2-87bf-5b91cc595c22', protocol='range'}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-9-aa98935e-5eb8-4d3d-b1b3-861d357dd03f
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-7-6d483d1e-58b5-4697-8496-766a9231b3ca
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-6-397f5280-a2c0-46ef-bab5-39ecfe964410
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=4, memberId='consumer-client-event-partitioned-group-id-2-a785f714-73fe-43b6-a5a7-8fc3a0e5b183', protocol='range'}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=4, memberId='consumer-client-event-partitioned-group-id-1-9921a30f-da77-4521-85c6-18045a3e24f6', protocol='range'}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=4, memberId='consumer-client-event-partitioned-group-id-10-b3b76713-2e15-480e-a7fd-814a0a012bd8', protocol='range'}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=4, memberId='consumer-client-event-partitioned-group-id-3-0bc06794-fc1e-42ec-a52e-a12c4be1bf3a', protocol='range'}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Finished assignment for group at generation 4: {consumer-client-event-partitioned-group-id-1-9921a30f-da77-4521-85c6-18045a3e24f6=Assignment(partitions=[client-event-partitioned-topic-0, client-event-partitioned-topic-1]), consumer-client-event-partitioned-group-id-4-7ed0e25e-530d-4bc2-87bf-5b91cc595c22=Assignment(partitions=[client-event-partitioned-topic-8, client-event-partitioned-topic-9]), consumer-client-event-partitioned-group-id-2-a785f714-73fe-43b6-a5a7-8fc3a0e5b183=Assignment(partitions=[client-event-partitioned-topic-4, client-event-partitioned-topic-5]), consumer-client-event-partitioned-group-id-10-b3b76713-2e15-480e-a7fd-814a0a012bd8=Assignment(partitions=[client-event-partitioned-topic-2, client-event-partitioned-topic-3]), consumer-client-event-partitioned-group-id-3-0bc06794-fc1e-42ec-a52e-a12c4be1bf3a=Assignment(partitions=[client-event-partitioned-topic-6, client-event-partitioned-topic-7])}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=4, memberId='consumer-client-event-partitioned-group-id-4-7ed0e25e-530d-4bc2-87bf-5b91cc595c22', protocol='range'}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=5, memberId='consumer-client-event-partitioned-group-id-8-9cb20152-6f1b-4304-bbc1-800700d82244', protocol='range'}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=5, memberId='consumer-client-event-partitioned-group-id-7-6d483d1e-58b5-4697-8496-766a9231b3ca', protocol='range'}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=5, memberId='consumer-client-event-partitioned-group-id-9-aa98935e-5eb8-4d3d-b1b3-861d357dd03f', protocol='range'}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=5, memberId='consumer-client-event-partitioned-group-id-2-a785f714-73fe-43b6-a5a7-8fc3a0e5b183', protocol='range'}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=5, memberId='consumer-client-event-partitioned-group-id-10-b3b76713-2e15-480e-a7fd-814a0a012bd8', protocol='range'}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=5, memberId='consumer-client-event-partitioned-group-id-5-22fa2dce-18e1-4c97-bdd1-2ba3f62160b8', protocol='range'}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=5, memberId='consumer-client-event-partitioned-group-id-3-0bc06794-fc1e-42ec-a52e-a12c4be1bf3a', protocol='range'}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=5, memberId='consumer-client-event-partitioned-group-id-4-7ed0e25e-530d-4bc2-87bf-5b91cc595c22', protocol='range'}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=5, memberId='consumer-client-event-partitioned-group-id-6-397f5280-a2c0-46ef-bab5-39ecfe964410', protocol='range'}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=5, memberId='consumer-client-event-partitioned-group-id-1-9921a30f-da77-4521-85c6-18045a3e24f6', protocol='range'}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Finished assignment for group at generation 5: {consumer-client-event-partitioned-group-id-1-9921a30f-da77-4521-85c6-18045a3e24f6=Assignment(partitions=[client-event-partitioned-topic-0]), consumer-client-event-partitioned-group-id-4-7ed0e25e-530d-4bc2-87bf-5b91cc595c22=Assignment(partitions=[client-event-partitioned-topic-4]), consumer-client-event-partitioned-group-id-2-a785f714-73fe-43b6-a5a7-8fc3a0e5b183=Assignment(partitions=[client-event-partitioned-topic-2]), consumer-client-event-partitioned-group-id-8-9cb20152-6f1b-4304-bbc1-800700d82244=Assignment(partitions=[client-event-partitioned-topic-8]), consumer-client-event-partitioned-group-id-7-6d483d1e-58b5-4697-8496-766a9231b3ca=Assignment(partitions=[client-event-partitioned-topic-7]), consumer-client-event-partitioned-group-id-6-397f5280-a2c0-46ef-bab5-39ecfe964410=Assignment(partitions=[client-event-partitioned-topic-6]), consumer-client-event-partitioned-group-id-5-22fa2dce-18e1-4c97-bdd1-2ba3f62160b8=Assignment(partitions=[client-event-partitioned-topic-5]), consumer-client-event-partitioned-group-id-9-aa98935e-5eb8-4d3d-b1b3-861d357dd03f=Assignment(partitions=[client-event-partitioned-topic-9]), consumer-client-event-partitioned-group-id-10-b3b76713-2e15-480e-a7fd-814a0a012bd8=Assignment(partitions=[client-event-partitioned-topic-1]), consumer-client-event-partitioned-group-id-3-0bc06794-fc1e-42ec-a52e-a12c4be1bf3a=Assignment(partitions=[client-event-partitioned-topic-3])}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=5, memberId='consumer-client-event-partitioned-group-id-7-6d483d1e-58b5-4697-8496-766a9231b3ca', protocol='range'}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=5, memberId='consumer-client-event-partitioned-group-id-1-9921a30f-da77-4521-85c6-18045a3e24f6', protocol='range'}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-7])
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-0])
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=5, memberId='consumer-client-event-partitioned-group-id-8-9cb20152-6f1b-4304-bbc1-800700d82244', protocol='range'}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-8])
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=5, memberId='consumer-client-event-partitioned-group-id-2-a785f714-73fe-43b6-a5a7-8fc3a0e5b183', protocol='range'}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-2])
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-7
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-2
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-0
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=5, memberId='consumer-client-event-partitioned-group-id-6-397f5280-a2c0-46ef-bab5-39ecfe964410', protocol='range'}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-8
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-6])
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-6
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=5, memberId='consumer-client-event-partitioned-group-id-5-22fa2dce-18e1-4c97-bdd1-2ba3f62160b8', protocol='range'}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=5, memberId='consumer-client-event-partitioned-group-id-10-b3b76713-2e15-480e-a7fd-814a0a012bd8', protocol='range'}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-1])
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-1
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-5])
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-5
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=5, memberId='consumer-client-event-partitioned-group-id-3-0bc06794-fc1e-42ec-a52e-a12c4be1bf3a', protocol='range'}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=5, memberId='consumer-client-event-partitioned-group-id-9-aa98935e-5eb8-4d3d-b1b3-861d357dd03f', protocol='range'}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=5, memberId='consumer-client-event-partitioned-group-id-4-7ed0e25e-530d-4bc2-87bf-5b91cc595c22', protocol='range'}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-3])
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-4])
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-4
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-3
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-9])
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-9
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Setting offset for partition client-event-partitioned-topic-5 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Setting offset for partition client-event-partitioned-topic-6 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Setting offset for partition client-event-partitioned-topic-7 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Setting offset for partition client-event-partitioned-topic-8 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-7]
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-8]
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Setting offset for partition client-event-partitioned-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-2]
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-5]
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-6]
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Setting offset for partition client-event-partitioned-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Setting offset for partition client-event-partitioned-topic-3 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Setting offset for partition client-event-partitioned-topic-9 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-3]
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-1]
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-9]
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Setting offset for partition client-event-partitioned-topic-4 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Setting offset for partition client-event-partitioned-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-4]
2024-02-04 02:14:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-0]
2024-02-04 02:15:14 [http-nio-8090-exec-5] INFO  o.a.c.c.C.[.[.[/alertmonitor] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-02-04 02:15:14 [http-nio-8090-exec-5] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-02-04 02:15:14 [http-nio-8090-exec-5] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 14 ms
2024-02-04 02:15:21 [http-nio-8090-exec-5] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2024-02-04 02:15:21 [http-nio-8090-exec-5] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2024-02-04 02:15:21 [http-nio-8090-exec-5] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:15:21 [http-nio-8090-exec-5] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:15:21 [http-nio-8090-exec-5] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993121436
2024-02-04 02:15:21 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:15:21 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 1034 with epoch 0
2024-02-04 02:15:25 [task-1] INFO  c.a.s.a.TumblingWindowMonitoringService - Client microservice_1 PAYMENT_EXCEPTION TUMBLING_WINDOW
2024-02-04 02:15:27 [task-2] INFO  c.a.s.a.TumblingWindowMonitoringService - Client microservice_1 PAYMENT_EXCEPTION TUMBLING_WINDOW
2024-02-04 02:15:30 [task-3] INFO  c.a.s.a.TumblingWindowMonitoringService - Client microservice_1 PAYMENT_EXCEPTION TUMBLING_WINDOW
2024-02-04 02:15:32 [task-4] INFO  c.a.s.a.TumblingWindowMonitoringService - Client microservice_1 PAYMENT_EXCEPTION TUMBLING_WINDOW
2024-02-04 02:15:35 [task-5] INFO  c.a.s.a.TumblingWindowMonitoringService - Client microservice_1 PAYMENT_EXCEPTION TUMBLING_WINDOW
2024-02-04 02:15:37 [task-6] INFO  c.a.s.a.TumblingWindowMonitoringService - Client microservice_1 PAYMENT_EXCEPTION TUMBLING_WINDOW
2024-02-04 02:15:40 [task-7] INFO  c.a.s.a.TumblingWindowMonitoringService - Client microservice_1 PAYMENT_EXCEPTION TUMBLING_WINDOW
2024-02-04 02:15:42 [task-8] INFO  c.a.s.a.TumblingWindowMonitoringService - Client microservice_1 PAYMENT_EXCEPTION TUMBLING_WINDOW
2024-02-04 02:15:45 [task-1] INFO  c.a.s.a.TumblingWindowMonitoringService - Client microservice_1 PAYMENT_EXCEPTION TUMBLING_WINDOW
2024-02-04 02:15:47 [task-2] INFO  c.a.s.a.TumblingWindowMonitoringService - Client microservice_1 PAYMENT_EXCEPTION TUMBLING_WINDOW
2024-02-04 02:15:50 [task-3] INFO  c.a.s.a.TumblingWindowMonitoringService - Client microservice_1 PAYMENT_EXCEPTION threshold breached
2024-02-04 02:15:50 [task-3] INFO  c.a.service.impl.AlertingServiceImpl - Client microservice_1 PAYMENT_EXCEPTION Dispatching to Console
2024-02-04 02:15:50 [task-3] WARN  c.a.service.impl.AlertImpl - issue in payment
2024-02-04 02:15:50 [task-3] INFO  c.a.service.impl.AlertingServiceImpl - Client microservice_1 PAYMENT_EXCEPTION Dispatching an Email
2024-02-04 02:15:52 [task-4] INFO  c.a.s.a.TumblingWindowMonitoringService - Client microservice_1 PAYMENT_EXCEPTION TUMBLING_WINDOW
2024-02-04 02:15:55 [task-5] INFO  c.a.s.a.TumblingWindowMonitoringService - Client microservice_1 PAYMENT_EXCEPTION TUMBLING_WINDOW
2024-02-04 02:15:57 [task-6] INFO  c.a.s.a.TumblingWindowMonitoringService - Client microservice_1 PAYMENT_EXCEPTION TUMBLING_WINDOW
2024-02-04 02:16:00 [task-7] INFO  c.a.s.a.TumblingWindowMonitoringService - Client microservice_1 PAYMENT_EXCEPTION TUMBLING_WINDOW
2024-02-04 02:16:02 [task-8] INFO  c.a.s.a.TumblingWindowMonitoringService - Client microservice_1 PAYMENT_EXCEPTION TUMBLING_WINDOW
2024-02-04 02:16:05 [task-1] INFO  c.a.s.a.TumblingWindowMonitoringService - Client microservice_1 PAYMENT_EXCEPTION TUMBLING_WINDOW
2024-02-04 02:16:07 [task-2] INFO  c.a.s.a.TumblingWindowMonitoringService - Client microservice_1 PAYMENT_EXCEPTION TUMBLING_WINDOW
2024-02-04 02:16:10 [task-3] INFO  c.a.s.a.TumblingWindowMonitoringService - Client microservice_1 PAYMENT_EXCEPTION TUMBLING_WINDOW
2024-02-04 02:16:12 [task-4] INFO  c.a.s.a.TumblingWindowMonitoringService - Client microservice_1 PAYMENT_EXCEPTION TUMBLING_WINDOW
2024-02-04 02:16:15 [task-5] INFO  c.a.s.a.TumblingWindowMonitoringService - Client microservice_1 PAYMENT_EXCEPTION TUMBLING_WINDOW
2024-02-04 02:16:22 [main] INFO  c.a.AlertMonitorApplication - Starting AlertMonitorApplication using Java 17.0.7 with PID 4688 (/Users/nanhe/Desktop/alert-monitor/build/classes/java/main started by nanhe in /Users/nanhe/Desktop/alert-monitor)
2024-02-04 02:16:22 [main] INFO  c.a.AlertMonitorApplication - The following 1 profile is active: "dev"
2024-02-04 02:16:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-02-04 02:16:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-02-04 02:16:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 34 ms. Found 0 Redis repository interfaces.
2024-02-04 02:16:24 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8090 (http)
2024-02-04 02:16:24 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"]
2024-02-04 02:16:24 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-02-04 02:16:24 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2024-02-04 02:16:24 [main] INFO  o.a.c.c.C.[.[.[/alertmonitor] - Initializing Spring embedded WebApplicationContext
2024-02-04 02:16:24 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1739 ms
2024-02-04 02:16:26 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2024-02-04 02:16:26 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-02-04 02:16:26 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:16:26 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:16:26 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993186972
2024-02-04 02:16:27 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2024-02-04 02:16:27 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-02-04 02:16:27 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-02-04 02:16:27 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-02-04 02:16:27 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"]
2024-02-04 02:16:27 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8090 (http) with context path '/alertmonitor'
2024-02-04 02:16:27 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:16:27 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:16:27 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:16:27 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993187384
2024-02-04 02:16:27 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:16:27 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:16:27 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:16:27 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:16:27 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993187407
2024-02-04 02:16:27 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:16:27 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:16:27 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:16:27 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:16:27 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993187424
2024-02-04 02:16:27 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:16:27 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:16:27 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:16:27 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:16:27 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993187467
2024-02-04 02:16:27 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:16:27 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-5
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:16:27 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:16:27 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:16:27 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993187494
2024-02-04 02:16:27 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:16:27 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-6
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:16:27 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:16:27 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:16:27 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993187510
2024-02-04 02:16:27 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:16:27 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-7
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:16:27 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:16:27 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:16:27 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993187567
2024-02-04 02:16:27 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:16:27 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-8
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:16:27 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:16:27 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:16:27 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993187645
2024-02-04 02:16:27 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:16:27 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-9
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:16:27 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:16:27 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:16:27 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993187737
2024-02-04 02:16:27 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-1-b0afdc37-deb1-42ef-a3e8-797da6e21d71
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-2-712f053a-3b00-49d8-82c6-b0c2a7fe959b
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-3-8a88bb59-b8fd-416f-b56a-c976f2800718
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-5-27a23e06-3d25-4133-8c27-2b63d5dd620a
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-4-52c54120-9704-4e0b-85f7-2dcadb2699f3
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-7-223141ec-c8e4-4289-b729-6267b530fb36
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-6-6b85bda8-fac6-48e5-a9a3-203a10a06455
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:16:27 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-10
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:16:27 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:16:27 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:16:27 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993187789
2024-02-04 02:16:27 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-8-eab2d785-be40-4cf4-88ac-27e34fa9fc5f
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-10-ece3e4af-a526-4f68-9aef-8a834144c966
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-9-67ba07c0-6dc0-4c6b-984f-9ad93d07ee65
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:16:27 [main] INFO  c.a.AlertMonitorApplication - Started AlertMonitorApplication in 5.409 seconds (process running for 5.748)
2024-02-04 02:16:29 [http-nio-8090-exec-5] INFO  o.a.c.c.C.[.[.[/alertmonitor] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-02-04 02:16:29 [http-nio-8090-exec-5] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-02-04 02:16:29 [http-nio-8090-exec-5] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2024-02-04 02:16:29 [http-nio-8090-exec-5] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2024-02-04 02:16:29 [http-nio-8090-exec-5] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2024-02-04 02:16:29 [http-nio-8090-exec-5] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:16:29 [http-nio-8090-exec-5] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:16:29 [http-nio-8090-exec-5] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993189862
2024-02-04 02:16:29 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:16:29 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 1035 with epoch 0
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=6, memberId='consumer-client-event-partitioned-group-id-4-52c54120-9704-4e0b-85f7-2dcadb2699f3', protocol='range'}
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=6, memberId='consumer-client-event-partitioned-group-id-3-8a88bb59-b8fd-416f-b56a-c976f2800718', protocol='range'}
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=6, memberId='consumer-client-event-partitioned-group-id-10-ece3e4af-a526-4f68-9aef-8a834144c966', protocol='range'}
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Finished assignment for group at generation 6: {consumer-client-event-partitioned-group-id-10-ece3e4af-a526-4f68-9aef-8a834144c966=Assignment(partitions=[client-event-partitioned-topic-1]), consumer-client-event-partitioned-group-id-9-67ba07c0-6dc0-4c6b-984f-9ad93d07ee65=Assignment(partitions=[client-event-partitioned-topic-9]), consumer-client-event-partitioned-group-id-7-223141ec-c8e4-4289-b729-6267b530fb36=Assignment(partitions=[client-event-partitioned-topic-7]), consumer-client-event-partitioned-group-id-4-52c54120-9704-4e0b-85f7-2dcadb2699f3=Assignment(partitions=[client-event-partitioned-topic-4]), consumer-client-event-partitioned-group-id-3-8a88bb59-b8fd-416f-b56a-c976f2800718=Assignment(partitions=[client-event-partitioned-topic-3]), consumer-client-event-partitioned-group-id-1-b0afdc37-deb1-42ef-a3e8-797da6e21d71=Assignment(partitions=[client-event-partitioned-topic-0]), consumer-client-event-partitioned-group-id-5-27a23e06-3d25-4133-8c27-2b63d5dd620a=Assignment(partitions=[client-event-partitioned-topic-5]), consumer-client-event-partitioned-group-id-8-eab2d785-be40-4cf4-88ac-27e34fa9fc5f=Assignment(partitions=[client-event-partitioned-topic-8]), consumer-client-event-partitioned-group-id-6-6b85bda8-fac6-48e5-a9a3-203a10a06455=Assignment(partitions=[client-event-partitioned-topic-6]), consumer-client-event-partitioned-group-id-2-712f053a-3b00-49d8-82c6-b0c2a7fe959b=Assignment(partitions=[client-event-partitioned-topic-2])}
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=6, memberId='consumer-client-event-partitioned-group-id-1-b0afdc37-deb1-42ef-a3e8-797da6e21d71', protocol='range'}
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=6, memberId='consumer-client-event-partitioned-group-id-7-223141ec-c8e4-4289-b729-6267b530fb36', protocol='range'}
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=6, memberId='consumer-client-event-partitioned-group-id-6-6b85bda8-fac6-48e5-a9a3-203a10a06455', protocol='range'}
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=6, memberId='consumer-client-event-partitioned-group-id-9-67ba07c0-6dc0-4c6b-984f-9ad93d07ee65', protocol='range'}
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=6, memberId='consumer-client-event-partitioned-group-id-2-712f053a-3b00-49d8-82c6-b0c2a7fe959b', protocol='range'}
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=6, memberId='consumer-client-event-partitioned-group-id-8-eab2d785-be40-4cf4-88ac-27e34fa9fc5f', protocol='range'}
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=6, memberId='consumer-client-event-partitioned-group-id-5-27a23e06-3d25-4133-8c27-2b63d5dd620a', protocol='range'}
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=6, memberId='consumer-client-event-partitioned-group-id-4-52c54120-9704-4e0b-85f7-2dcadb2699f3', protocol='range'}
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=6, memberId='consumer-client-event-partitioned-group-id-10-ece3e4af-a526-4f68-9aef-8a834144c966', protocol='range'}
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=6, memberId='consumer-client-event-partitioned-group-id-8-eab2d785-be40-4cf4-88ac-27e34fa9fc5f', protocol='range'}
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=6, memberId='consumer-client-event-partitioned-group-id-6-6b85bda8-fac6-48e5-a9a3-203a10a06455', protocol='range'}
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=6, memberId='consumer-client-event-partitioned-group-id-1-b0afdc37-deb1-42ef-a3e8-797da6e21d71', protocol='range'}
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-6])
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-8])
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-4])
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-0])
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-1])
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=6, memberId='consumer-client-event-partitioned-group-id-2-712f053a-3b00-49d8-82c6-b0c2a7fe959b', protocol='range'}
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=6, memberId='consumer-client-event-partitioned-group-id-7-223141ec-c8e4-4289-b729-6267b530fb36', protocol='range'}
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=6, memberId='consumer-client-event-partitioned-group-id-5-27a23e06-3d25-4133-8c27-2b63d5dd620a', protocol='range'}
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-7])
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-2])
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=6, memberId='consumer-client-event-partitioned-group-id-9-67ba07c0-6dc0-4c6b-984f-9ad93d07ee65', protocol='range'}
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-5])
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-9])
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=6, memberId='consumer-client-event-partitioned-group-id-3-8a88bb59-b8fd-416f-b56a-c976f2800718', protocol='range'}
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-3])
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-6
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-2
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-9
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-0
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-1
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-8
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-3
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-7
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-4
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-5
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Setting offset for partition client-event-partitioned-topic-3 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Setting offset for partition client-event-partitioned-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Setting offset for partition client-event-partitioned-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Setting offset for partition client-event-partitioned-topic-7 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-0]
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-7]
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-3]
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-2]
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Setting offset for partition client-event-partitioned-topic-8 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-8]
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Setting offset for partition client-event-partitioned-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-1]
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Setting offset for partition client-event-partitioned-topic-5 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-5]
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Setting offset for partition client-event-partitioned-topic-6 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-6]
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Setting offset for partition client-event-partitioned-topic-9 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-9]
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Setting offset for partition client-event-partitioned-topic-4 to the committed offset FetchPosition{offset=21, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-04 02:17:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-4]
2024-02-04 02:17:01 [task-4] INFO  c.a.s.a.TumblingWindowMonitoringService - Client microservice_1 PAYMENT_EXCEPTION TUMBLING_WINDOW
2024-02-04 02:17:01 [task-2] INFO  c.a.s.a.TumblingWindowMonitoringService - Client microservice_1 PAYMENT_EXCEPTION TUMBLING_WINDOW
2024-02-04 02:17:01 [task-3] INFO  c.a.s.a.TumblingWindowMonitoringService - Client microservice_1 PAYMENT_EXCEPTION TUMBLING_WINDOW
2024-02-04 02:17:01 [task-1] INFO  c.a.s.a.TumblingWindowMonitoringService - Client microservice_1 PAYMENT_EXCEPTION TUMBLING_WINDOW
2024-02-04 02:17:12 [task-5] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:13 [task-6] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:13 [task-7] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:14 [task-8] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:15 [task-3] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:15 [task-2] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:16 [task-4] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:16 [task-1] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:17 [task-5] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:18 [task-6] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:18 [task-7] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 threshold breached
2024-02-04 02:17:18 [task-7] INFO  c.a.service.impl.AlertingServiceImpl - Client user_1 USERSERVICE_EXCEPTION1 Dispatching to Console
2024-02-04 02:17:18 [task-7] WARN  c.a.service.impl.AlertImpl - issue in user service
2024-02-04 02:17:19 [task-8] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 threshold breached
2024-02-04 02:17:19 [task-8] INFO  c.a.service.impl.AlertingServiceImpl - Client user_1 USERSERVICE_EXCEPTION1 Dispatching to Console
2024-02-04 02:17:19 [task-8] WARN  c.a.service.impl.AlertImpl - issue in user service
2024-02-04 02:17:20 [task-3] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 threshold breached
2024-02-04 02:17:20 [task-3] INFO  c.a.service.impl.AlertingServiceImpl - Client user_1 USERSERVICE_EXCEPTION1 Dispatching to Console
2024-02-04 02:17:20 [task-3] WARN  c.a.service.impl.AlertImpl - issue in user service
2024-02-04 02:17:20 [task-2] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 threshold breached
2024-02-04 02:17:20 [task-2] INFO  c.a.service.impl.AlertingServiceImpl - Client user_1 USERSERVICE_EXCEPTION1 Dispatching to Console
2024-02-04 02:17:20 [task-2] WARN  c.a.service.impl.AlertImpl - issue in user service
2024-02-04 02:17:21 [task-4] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 threshold breached
2024-02-04 02:17:21 [task-4] INFO  c.a.service.impl.AlertingServiceImpl - Client user_1 USERSERVICE_EXCEPTION1 Dispatching to Console
2024-02-04 02:17:21 [task-4] WARN  c.a.service.impl.AlertImpl - issue in user service
2024-02-04 02:17:22 [task-1] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 threshold breached
2024-02-04 02:17:22 [task-1] INFO  c.a.service.impl.AlertingServiceImpl - Client user_1 USERSERVICE_EXCEPTION1 Dispatching to Console
2024-02-04 02:17:22 [task-1] WARN  c.a.service.impl.AlertImpl - issue in user service
2024-02-04 02:17:22 [task-5] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 threshold breached
2024-02-04 02:17:22 [task-5] INFO  c.a.service.impl.AlertingServiceImpl - Client user_1 USERSERVICE_EXCEPTION1 Dispatching to Console
2024-02-04 02:17:22 [task-5] WARN  c.a.service.impl.AlertImpl - issue in user service
2024-02-04 02:17:23 [task-6] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:24 [task-7] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:24 [task-8] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:25 [task-3] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:25 [task-2] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 threshold breached
2024-02-04 02:17:25 [task-2] INFO  c.a.service.impl.AlertingServiceImpl - Client user_1 USERSERVICE_EXCEPTION1 Dispatching to Console
2024-02-04 02:17:25 [task-2] WARN  c.a.service.impl.AlertImpl - issue in user service
2024-02-04 02:17:26 [task-4] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:27 [task-1] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:27 [task-5] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:28 [task-6] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:29 [task-7] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:29 [task-8] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:30 [task-3] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 threshold breached
2024-02-04 02:17:30 [task-3] INFO  c.a.service.impl.AlertingServiceImpl - Client user_1 USERSERVICE_EXCEPTION1 Dispatching to Console
2024-02-04 02:17:30 [task-3] WARN  c.a.service.impl.AlertImpl - issue in user service
2024-02-04 02:17:31 [task-2] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 threshold breached
2024-02-04 02:17:31 [task-2] INFO  c.a.service.impl.AlertingServiceImpl - Client user_1 USERSERVICE_EXCEPTION1 Dispatching to Console
2024-02-04 02:17:31 [task-2] WARN  c.a.service.impl.AlertImpl - issue in user service
2024-02-04 02:17:31 [task-4] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 threshold breached
2024-02-04 02:17:31 [task-4] INFO  c.a.service.impl.AlertingServiceImpl - Client user_1 USERSERVICE_EXCEPTION1 Dispatching to Console
2024-02-04 02:17:31 [task-4] WARN  c.a.service.impl.AlertImpl - issue in user service
2024-02-04 02:17:32 [task-1] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 threshold breached
2024-02-04 02:17:32 [task-1] INFO  c.a.service.impl.AlertingServiceImpl - Client user_1 USERSERVICE_EXCEPTION1 Dispatching to Console
2024-02-04 02:17:32 [task-1] WARN  c.a.service.impl.AlertImpl - issue in user service
2024-02-04 02:17:32 [task-5] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 threshold breached
2024-02-04 02:17:32 [task-5] INFO  c.a.service.impl.AlertingServiceImpl - Client user_1 USERSERVICE_EXCEPTION1 Dispatching to Console
2024-02-04 02:17:32 [task-5] WARN  c.a.service.impl.AlertImpl - issue in user service
2024-02-04 02:17:33 [task-6] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 threshold breached
2024-02-04 02:17:33 [task-6] INFO  c.a.service.impl.AlertingServiceImpl - Client user_1 USERSERVICE_EXCEPTION1 Dispatching to Console
2024-02-04 02:17:33 [task-6] WARN  c.a.service.impl.AlertImpl - issue in user service
2024-02-04 02:17:34 [task-7] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:34 [task-8] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 threshold breached
2024-02-04 02:17:34 [task-8] INFO  c.a.service.impl.AlertingServiceImpl - Client user_1 USERSERVICE_EXCEPTION1 Dispatching to Console
2024-02-04 02:17:34 [task-8] WARN  c.a.service.impl.AlertImpl - issue in user service
2024-02-04 02:17:35 [task-3] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:36 [task-2] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:36 [task-4] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:37 [task-1] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:37 [task-5] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 threshold breached
2024-02-04 02:17:37 [task-5] INFO  c.a.service.impl.AlertingServiceImpl - Client user_1 USERSERVICE_EXCEPTION1 Dispatching to Console
2024-02-04 02:17:37 [task-5] WARN  c.a.service.impl.AlertImpl - issue in user service
2024-02-04 02:17:38 [task-6] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:39 [task-7] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:39 [task-8] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:40 [task-3] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:41 [task-2] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:41 [task-4] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 threshold breached
2024-02-04 02:17:41 [task-4] INFO  c.a.service.impl.AlertingServiceImpl - Client user_1 USERSERVICE_EXCEPTION1 Dispatching to Console
2024-02-04 02:17:41 [task-4] WARN  c.a.service.impl.AlertImpl - issue in user service
2024-02-04 02:17:43 [task-1] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 threshold breached
2024-02-04 02:17:43 [task-1] INFO  c.a.service.impl.AlertingServiceImpl - Client user_1 USERSERVICE_EXCEPTION1 Dispatching to Console
2024-02-04 02:17:43 [task-1] WARN  c.a.service.impl.AlertImpl - issue in user service
2024-02-04 02:17:43 [task-5] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 threshold breached
2024-02-04 02:17:43 [task-5] INFO  c.a.service.impl.AlertingServiceImpl - Client user_1 USERSERVICE_EXCEPTION1 Dispatching to Console
2024-02-04 02:17:43 [task-5] WARN  c.a.service.impl.AlertImpl - issue in user service
2024-02-04 02:17:43 [task-6] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 threshold breached
2024-02-04 02:17:43 [task-6] INFO  c.a.service.impl.AlertingServiceImpl - Client user_1 USERSERVICE_EXCEPTION1 Dispatching to Console
2024-02-04 02:17:43 [task-6] WARN  c.a.service.impl.AlertImpl - issue in user service
2024-02-04 02:17:44 [task-7] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 threshold breached
2024-02-04 02:17:44 [task-7] INFO  c.a.service.impl.AlertingServiceImpl - Client user_1 USERSERVICE_EXCEPTION1 Dispatching to Console
2024-02-04 02:17:44 [task-7] WARN  c.a.service.impl.AlertImpl - issue in user service
2024-02-04 02:17:44 [task-8] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 threshold breached
2024-02-04 02:17:44 [task-8] INFO  c.a.service.impl.AlertingServiceImpl - Client user_1 USERSERVICE_EXCEPTION1 Dispatching to Console
2024-02-04 02:17:44 [task-8] WARN  c.a.service.impl.AlertImpl - issue in user service
2024-02-04 02:17:45 [task-3] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:46 [task-2] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:46 [task-4] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 threshold breached
2024-02-04 02:17:46 [task-4] INFO  c.a.service.impl.AlertingServiceImpl - Client user_1 USERSERVICE_EXCEPTION1 Dispatching to Console
2024-02-04 02:17:46 [task-4] WARN  c.a.service.impl.AlertImpl - issue in user service
2024-02-04 02:17:47 [task-1] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:48 [task-5] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:48 [task-6] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:49 [task-7] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:49 [task-8] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 threshold breached
2024-02-04 02:17:49 [task-8] INFO  c.a.service.impl.AlertingServiceImpl - Client user_1 USERSERVICE_EXCEPTION1 Dispatching to Console
2024-02-04 02:17:49 [task-8] WARN  c.a.service.impl.AlertImpl - issue in user service
2024-02-04 02:17:50 [task-3] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:51 [task-2] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:51 [task-4] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:17:52 [task-1] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
2024-02-04 02:27:10 [main] INFO  c.a.AlertMonitorApplication - Starting AlertMonitorApplication using Java 17.0.7 with PID 11265 (/Users/nanhe/Desktop/alert-monitor/build/classes/java/main started by nanhe in /Users/nanhe/Desktop/alert-monitor)
2024-02-04 02:27:10 [main] INFO  c.a.AlertMonitorApplication - The following 1 profile is active: "dev"
2024-02-04 02:27:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-02-04 02:27:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-02-04 02:27:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 0 Redis repository interfaces.
2024-02-04 02:27:12 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8090 (http)
2024-02-04 02:27:12 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"]
2024-02-04 02:27:12 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-02-04 02:27:12 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2024-02-04 02:27:12 [main] INFO  o.a.c.c.C.[.[.[/alertmonitor] - Initializing Spring embedded WebApplicationContext
2024-02-04 02:27:12 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1893 ms
2024-02-04 02:27:13 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2024-02-04 02:27:13 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-02-04 02:27:13 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:27:13 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:27:13 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993833858
2024-02-04 02:27:14 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2024-02-04 02:27:14 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-02-04 02:27:14 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-02-04 02:27:14 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-02-04 02:27:14 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"]
2024-02-04 02:27:14 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8090 (http) with context path '/alertmonitor'
2024-02-04 02:27:14 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:27:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:27:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:27:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993834200
2024-02-04 02:27:14 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:27:14 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:27:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:27:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:27:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993834209
2024-02-04 02:27:14 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:27:14 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:27:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:27:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:27:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993834220
2024-02-04 02:27:14 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:27:14 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:27:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:27:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:27:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993834223
2024-02-04 02:27:14 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:27:14 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-5
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:27:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:27:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:27:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993834227
2024-02-04 02:27:14 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:27:14 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-6
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:27:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:27:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:27:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993834230
2024-02-04 02:27:14 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:27:14 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-7
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:27:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:27:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:27:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993834234
2024-02-04 02:27:14 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:27:14 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-8
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-1-3e5d1acd-31a8-4a77-b7f1-0b5f614af40f
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-5-d157ccad-2c94-4c0d-af47-0c8c47c66e31
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:27:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:27:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:27:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993834237
2024-02-04 02:27:14 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:27:14 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-9
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:27:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:27:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:27:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993834240
2024-02-04 02:27:14 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:27:14 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-client-event-partitioned-group-id-10
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = client-event-partitioned-group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class com.alertmonitor.model.kafka.ClientEventDTODeserializer

2024-02-04 02:27:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:27:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:27:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993834244
2024-02-04 02:27:14 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Subscribed to topic(s): client-event-partitioned-topic
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-6-2fdc3fb5-275d-47a0-8596-5317c8a9f45c
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:27:14 [main] INFO  c.a.AlertMonitorApplication - Started AlertMonitorApplication in 4.319 seconds (process running for 5.392)
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-3-821b0a23-ed33-4672-8106-559cab5af68e
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-2-4ba3e00c-953f-4937-9668-26ba357d78c3
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-4-3628c729-77a5-48f8-9849-4a7a12e7f5a2
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-10-37e10cd5-1dff-432e-a734-9759bbd62c51
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=8, memberId='consumer-client-event-partitioned-group-id-1-3e5d1acd-31a8-4a77-b7f1-0b5f614af40f', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=8, memberId='consumer-client-event-partitioned-group-id-2-4ba3e00c-953f-4937-9668-26ba357d78c3', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=8, memberId='consumer-client-event-partitioned-group-id-4-3628c729-77a5-48f8-9849-4a7a12e7f5a2', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=8, memberId='consumer-client-event-partitioned-group-id-10-37e10cd5-1dff-432e-a734-9759bbd62c51', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=8, memberId='consumer-client-event-partitioned-group-id-3-821b0a23-ed33-4672-8106-559cab5af68e', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=8, memberId='consumer-client-event-partitioned-group-id-5-d157ccad-2c94-4c0d-af47-0c8c47c66e31', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=8, memberId='consumer-client-event-partitioned-group-id-6-2fdc3fb5-275d-47a0-8596-5317c8a9f45c', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-7-28e0314b-0fac-4c8f-afb8-65f036b4295d
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-9-514fcfbc-9ebc-4462-b61b-1b1bba49649b
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Request joining group due to: need to re-join with the given member-id: consumer-client-event-partitioned-group-id-8-2193b102-f9bf-4397-9d0f-3fbc0c5d2708
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=8, memberId='consumer-client-event-partitioned-group-id-2-4ba3e00c-953f-4937-9668-26ba357d78c3', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=8, memberId='consumer-client-event-partitioned-group-id-1-3e5d1acd-31a8-4a77-b7f1-0b5f614af40f', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=8, memberId='consumer-client-event-partitioned-group-id-3-821b0a23-ed33-4672-8106-559cab5af68e', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=8, memberId='consumer-client-event-partitioned-group-id-4-3628c729-77a5-48f8-9849-4a7a12e7f5a2', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Finished assignment for group at generation 8: {consumer-client-event-partitioned-group-id-1-3e5d1acd-31a8-4a77-b7f1-0b5f614af40f=Assignment(partitions=[client-event-partitioned-topic-0, client-event-partitioned-topic-1]), consumer-client-event-partitioned-group-id-2-4ba3e00c-953f-4937-9668-26ba357d78c3=Assignment(partitions=[client-event-partitioned-topic-4, client-event-partitioned-topic-5]), consumer-client-event-partitioned-group-id-6-2fdc3fb5-275d-47a0-8596-5317c8a9f45c=Assignment(partitions=[client-event-partitioned-topic-9]), consumer-client-event-partitioned-group-id-4-3628c729-77a5-48f8-9849-4a7a12e7f5a2=Assignment(partitions=[client-event-partitioned-topic-7]), consumer-client-event-partitioned-group-id-5-d157ccad-2c94-4c0d-af47-0c8c47c66e31=Assignment(partitions=[client-event-partitioned-topic-8]), consumer-client-event-partitioned-group-id-10-37e10cd5-1dff-432e-a734-9759bbd62c51=Assignment(partitions=[client-event-partitioned-topic-2, client-event-partitioned-topic-3]), consumer-client-event-partitioned-group-id-3-821b0a23-ed33-4672-8106-559cab5af68e=Assignment(partitions=[client-event-partitioned-topic-6])}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=8, memberId='consumer-client-event-partitioned-group-id-5-d157ccad-2c94-4c0d-af47-0c8c47c66e31', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=8, memberId='consumer-client-event-partitioned-group-id-10-37e10cd5-1dff-432e-a734-9759bbd62c51', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=8, memberId='consumer-client-event-partitioned-group-id-6-2fdc3fb5-275d-47a0-8596-5317c8a9f45c', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] (Re-)joining group
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=9, memberId='consumer-client-event-partitioned-group-id-9-514fcfbc-9ebc-4462-b61b-1b1bba49649b', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=9, memberId='consumer-client-event-partitioned-group-id-1-3e5d1acd-31a8-4a77-b7f1-0b5f614af40f', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=9, memberId='consumer-client-event-partitioned-group-id-4-3628c729-77a5-48f8-9849-4a7a12e7f5a2', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=9, memberId='consumer-client-event-partitioned-group-id-6-2fdc3fb5-275d-47a0-8596-5317c8a9f45c', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Finished assignment for group at generation 9: {consumer-client-event-partitioned-group-id-1-3e5d1acd-31a8-4a77-b7f1-0b5f614af40f=Assignment(partitions=[client-event-partitioned-topic-0]), consumer-client-event-partitioned-group-id-8-2193b102-f9bf-4397-9d0f-3fbc0c5d2708=Assignment(partitions=[client-event-partitioned-topic-8]), consumer-client-event-partitioned-group-id-7-28e0314b-0fac-4c8f-afb8-65f036b4295d=Assignment(partitions=[client-event-partitioned-topic-7]), consumer-client-event-partitioned-group-id-9-514fcfbc-9ebc-4462-b61b-1b1bba49649b=Assignment(partitions=[client-event-partitioned-topic-9]), consumer-client-event-partitioned-group-id-2-4ba3e00c-953f-4937-9668-26ba357d78c3=Assignment(partitions=[client-event-partitioned-topic-2]), consumer-client-event-partitioned-group-id-6-2fdc3fb5-275d-47a0-8596-5317c8a9f45c=Assignment(partitions=[client-event-partitioned-topic-6]), consumer-client-event-partitioned-group-id-4-3628c729-77a5-48f8-9849-4a7a12e7f5a2=Assignment(partitions=[client-event-partitioned-topic-4]), consumer-client-event-partitioned-group-id-5-d157ccad-2c94-4c0d-af47-0c8c47c66e31=Assignment(partitions=[client-event-partitioned-topic-5]), consumer-client-event-partitioned-group-id-10-37e10cd5-1dff-432e-a734-9759bbd62c51=Assignment(partitions=[client-event-partitioned-topic-1]), consumer-client-event-partitioned-group-id-3-821b0a23-ed33-4672-8106-559cab5af68e=Assignment(partitions=[client-event-partitioned-topic-3])}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=9, memberId='consumer-client-event-partitioned-group-id-2-4ba3e00c-953f-4937-9668-26ba357d78c3', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=9, memberId='consumer-client-event-partitioned-group-id-7-28e0314b-0fac-4c8f-afb8-65f036b4295d', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=9, memberId='consumer-client-event-partitioned-group-id-8-2193b102-f9bf-4397-9d0f-3fbc0c5d2708', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=9, memberId='consumer-client-event-partitioned-group-id-3-821b0a23-ed33-4672-8106-559cab5af68e', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=9, memberId='consumer-client-event-partitioned-group-id-5-d157ccad-2c94-4c0d-af47-0c8c47c66e31', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Successfully joined group with generation Generation{generationId=9, memberId='consumer-client-event-partitioned-group-id-10-37e10cd5-1dff-432e-a734-9759bbd62c51', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=9, memberId='consumer-client-event-partitioned-group-id-3-821b0a23-ed33-4672-8106-559cab5af68e', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=9, memberId='consumer-client-event-partitioned-group-id-9-514fcfbc-9ebc-4462-b61b-1b1bba49649b', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-9])
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-3])
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=9, memberId='consumer-client-event-partitioned-group-id-2-4ba3e00c-953f-4937-9668-26ba357d78c3', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=9, memberId='consumer-client-event-partitioned-group-id-6-2fdc3fb5-275d-47a0-8596-5317c8a9f45c', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-6])
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=9, memberId='consumer-client-event-partitioned-group-id-4-3628c729-77a5-48f8-9849-4a7a12e7f5a2', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-2])
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-4])
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=9, memberId='consumer-client-event-partitioned-group-id-1-3e5d1acd-31a8-4a77-b7f1-0b5f614af40f', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-3
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-0])
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-0
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-9
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-4
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-2
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-6
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=9, memberId='consumer-client-event-partitioned-group-id-7-28e0314b-0fac-4c8f-afb8-65f036b4295d', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-7])
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-7
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=9, memberId='consumer-client-event-partitioned-group-id-8-2193b102-f9bf-4397-9d0f-3fbc0c5d2708', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-8])
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-8
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=9, memberId='consumer-client-event-partitioned-group-id-10-37e10cd5-1dff-432e-a734-9759bbd62c51', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Successfully synced group in generation Generation{generationId=9, memberId='consumer-client-event-partitioned-group-id-5-d157ccad-2c94-4c0d-af47-0c8c47c66e31', protocol='range'}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-1])
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-1
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Notifying assignor about the new Assignment(partitions=[client-event-partitioned-topic-5])
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Adding newly assigned partitions: client-event-partitioned-topic-5
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-9, groupId=client-event-partitioned-group-id] Setting offset for partition client-event-partitioned-topic-9 to the committed offset FetchPosition{offset=68, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-3, groupId=client-event-partitioned-group-id] Setting offset for partition client-event-partitioned-topic-3 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-1, groupId=client-event-partitioned-group-id] Setting offset for partition client-event-partitioned-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-2, groupId=client-event-partitioned-group-id] Setting offset for partition client-event-partitioned-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-7, groupId=client-event-partitioned-group-id] Setting offset for partition client-event-partitioned-topic-7 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-4, groupId=client-event-partitioned-group-id] Setting offset for partition client-event-partitioned-topic-4 to the committed offset FetchPosition{offset=21, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-6, groupId=client-event-partitioned-group-id] Setting offset for partition client-event-partitioned-topic-6 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-5-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-6]
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-3]
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-6-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-7]
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-8, groupId=client-event-partitioned-group-id] Setting offset for partition client-event-partitioned-topic-8 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-7-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-8]
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-2]
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-3-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-4]
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-8-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-9]
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-0]
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-10, groupId=client-event-partitioned-group-id] Setting offset for partition client-event-partitioned-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-9-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-1]
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-client-event-partitioned-group-id-5, groupId=client-event-partitioned-group-id] Setting offset for partition client-event-partitioned-topic-5 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-04 02:27:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-4-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - client-event-partitioned-group-id: partitions assigned: [client-event-partitioned-topic-5]
2024-02-04 02:27:32 [http-nio-8090-exec-2] INFO  o.a.c.c.C.[.[.[/alertmonitor] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-02-04 02:27:32 [http-nio-8090-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-02-04 02:27:32 [http-nio-8090-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2024-02-04 02:27:32 [http-nio-8090-exec-2] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2024-02-04 02:27:32 [http-nio-8090-exec-2] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2024-02-04 02:27:32 [http-nio-8090-exec-2] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-02-04 02:27:32 [http-nio-8090-exec-2] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-02-04 02:27:32 [http-nio-8090-exec-2] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706993852613
2024-02-04 02:27:32 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: S_8MipVMReOym9cYM4GpLw
2024-02-04 02:27:32 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 1036 with epoch 0
2024-02-04 02:27:32 [task-1] INFO  c.a.s.a.SlidingWindowMonitoringService - Client user_1 USERSERVICE_EXCEPTION1 SLIDING_WINDOW
